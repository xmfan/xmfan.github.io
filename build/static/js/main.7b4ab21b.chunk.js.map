{"version":3,"sources":["components/BlogPostLayout.module.css","components/Pagination.module.css","components/ArticleMeta.module.css","utils/formats.js","components/ArticleMeta.js","components/Bio.js","utils/getGravatarURL.js","components/Pagination.js","components/BlogIndexPage.js","components/NotFoundPage.js","components/LoadingIndicator.js","components/BlogLayout.js","components/BlogPostLayout.js","siteMetadata.js","routes/posts/index.js","routes/index.js","components/Bio.module.css","components/BlogIndexPage.module.css","components/LoadingIndicator.module.css","components/BlogLayout.module.css","components/ArticleSummary.js","components/ArticleSummary.module.css","serviceWorker.js","index.js"],"names":["module","exports","title","header","footer","bio","links","next","content","Pagination","previous","tags","nostyle","months","ArticleMeta","_ref","readingTimeElement","blogRoot","meta","readingTime","minutes","Math","max","round","cups","react_default","a","createElement","Fragment","className","styles","Array","fill","join","dateTime","date","toUTCString","dateString","Date","monthName","getMonth","dayOfMonth","getDate","fourDigitYear","getFullYear","concat","formatDate","length","map","tag","key","es","href","Bio","props","photoURL","email","size","_ref$defaultURL","defaultURL","hash","md5","toLowerCase","trim","encodeURIComponent","getGravatarURL","dist_es","to","src","alt","pageCount","pageNumber","String","pages","current","count","BlogIndexPage","postRoutes","components_Bio","articlesList","route","url","ArticleSummary","components_Pagination","NotFoundPage","NotFound","LoadingIndicator","active","style","BlogLayout","isViewingIndex","loadingRoute","useLoadingRoute","container","components_LoadingIndicator","render","components_NotFoundPage","BlogPostLayout","_useCurrentRoute","useCurrentRoute","data","_useView","useView","connect","head","MDXComponent","pathname","index_es","components","Link","wrapper","_ref2","children","previousDetails","nextDetails","siteMetadata","postModules","./2019-01-05-welcome/post.js","__webpack_require__","e","then","bind","importPost","postPathnames","Object","keys","datePattern","postDetails","slug","slugify","replace","dateMatch","match","parseInt","posts","sortBy","reverse","i","getPage","Navi","asyncToGenerator","regenerator_default","mark","_callee2","_ref3","post","getContent","previousSlug","previousPost","nextSlug","nextPost","previousPostDetails","nextPostDetails","wrap","_context2","prev","sent","default","objectWithoutProperties","abrupt","getData","req","context","_objectSpread","getView","_getView","_callee","_ref4","other","_context","stop","apply","this","arguments","chunks","chunk","chunkPagePairs","pageTitle","method","Promise","all","resolve","routes","_x3","view","components_BlogIndexPage","_x","_x2","compose","withContext","routes_objectSpread","mountpath","withView","path","test","components_BlogLayout","mount","/","shift","/page","/1","redirect","fromPairs","/posts","components_BlogPostLayout","/tags","lazy","/about","LoadingIndicator-animation","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_navi__WEBPACK_IMPORTED_MODULE_1__","_ArticleMeta__WEBPACK_IMPORTED_MODULE_2__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3___default","spoiler","Boolean","window","location","hostname","register","main","_main","navigation","createBrowserNavigation","getRoute","process","renderer","ReactDOM","hydrate","react_navi_helmet_async_dist_es","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b4ab21b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogPostLayout_title__2L_2_\",\"header\":\"BlogPostLayout_header__1Ny4T\",\"footer\":\"BlogPostLayout_footer__3ofxa\",\"bio\":\"BlogPostLayout_bio__diNn9\",\"links\":\"BlogPostLayout_links__-LX2X\",\"next\":\"BlogPostLayout_next__KrMHx\",\"content\":\"BlogPostLayout_content__1mzTO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"Pagination_Pagination__2Xt2h\",\"previous\":\"Pagination_previous__1akUm\",\"next\":\"Pagination_next__7Ba4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"ArticleMeta_tags__1IJ9w\",\"nostyle\":\"ArticleMeta_nostyle__3K4VI\"};","export let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nexport function formatDate(dateString) {\n  let date = new Date(dateString)\n  let monthName = months[date.getMonth()]\n  let dayOfMonth = date.getDate()\n  let fourDigitYear = date.getFullYear()\n\n  return `${monthName} ${dayOfMonth}, ${fourDigitYear}`\n}","import { join } from 'path'\nimport React from 'react'\nimport { Link } from 'react-navi'\nimport { formatDate } from '../utils/formats'\nimport styles from './ArticleMeta.module.css'\n\nfunction ArticleMeta({ blogRoot, meta, readingTime }) {\n  let readingTimeElement\n  if (readingTime) {\n    let minutes = Math.max(Math.round(readingTime.minutes), 1)\n    let cups = Math.round(minutes / 5);\n    readingTimeElement =\n      <React.Fragment>\n        {' '}&bull;{' '}\n        <span className={styles.readingTime}>\n          {new Array(cups || 1).fill('☕️').join('')} {minutes} min read\n        </span>\n      </React.Fragment>\n  }\n\n  return (\n    <small className={styles.ArticleMeta}>\n      <time dateTime={meta.date.toUTCString()}>{formatDate(meta.date)}</time>\n      {\n        meta.tags &&\n        meta.tags.length &&\n        <>\n          {' '}&bull;{' '}\n          <ul className={styles.tags}>\n            {meta.tags.map(tag =>\n              <li key={tag}>\n                <Link href={join(blogRoot, 'tags', tag)} className={styles.nostyle}>{tag}</Link>\n              </li>\n            )}\n          </ul>\n        </>\n      }\n      {readingTimeElement || null}\n    </small>\n  )\n}\n\nexport default ArticleMeta\n","import React from 'react'\nimport styles from './Bio.module.css'\nimport { getGravatarURL } from '../utils/getGravatarURL'\nimport { Link } from 'react-navi'\n\nfunction Bio(props) {\n  let photoURL = getGravatarURL({\n    email: \"simon.xmfan@gmail.com\",\n    size: 60,\n  })\n\n  return (\n    <div className={`\n      ${styles.Bio}\n      ${props.className || ''}\n    `}>\n      <Link to={props.blogRoot}>\n        <img src={photoURL} alt=\"Me\" />\n      </Link>\n      <p>\n        <b>Simon Fan (樊昕明)</b>\n        <br />\n        Mind-wandering\n        <br />\n        <small><Link href=\"/about\" className={styles.nostyle}>About</Link></small>\n        <br />\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import md5 from 'blueimp-md5'\n\nexport function getGravatarURL({ email, size, defaultURL = 'identicon' }) {\n  let hash = md5(email.toLowerCase().trim())\n  return `https://www.gravatar.com/avatar/${hash}.jpg?s=${size}&d=${encodeURIComponent(defaultURL)}`\n}\n","import { join } from 'path'\nimport React from 'react'\nimport { Link } from 'react-navi'\nimport styles from './Pagination.module.css'\n\nfunction Pagination({ blogRoot, pageCount, pageNumber }) {\n  return (\n    <small className={styles.Pagination}>\n      {\n        pageNumber !== 1 &&\n        <Link\n          className={styles.previous}\n          href={join(blogRoot, 'page', String(pageNumber - 1))}>\n          ← Previous\n        </Link>\n      }\n      <span className={styles.pages}>\n        {' '}Page <span className={styles.current}>{pageNumber}</span>/<span className={styles.count}>{pageCount}</span>{' '}\n      </span>\n      {\n        pageNumber < pageCount &&\n        <Link\n          className={styles.next}\n          href={join(blogRoot, 'page', String(pageNumber + 1))}>\n          Next →\n        </Link>\n      }\n    </small>\n  )\n}\n\nexport default Pagination","import React from 'react'\nimport ArticleSummary from './ArticleSummary'\nimport Bio from './Bio'\nimport Pagination from './Pagination'\nimport styles from './BlogIndexPage.module.css'\n\nfunction BlogIndexPage({ blogRoot, pageCount, pageNumber, postRoutes }) {\n  return (\n    <div>\n      <header>\n        <Bio blogRoot={blogRoot} />\n      </header>\n      <ul className={styles.articlesList}>\n        {postRoutes.map(route => (\n          <li key={route.url.href}>\n            <ArticleSummary blogRoot={blogRoot} route={route} />\n          </li>\n        ))}\n      </ul>\n      {pageCount > 1 && (\n        <Pagination\n          blogRoot={blogRoot}\n          pageCount={pageCount}\n          pageNumber={pageNumber}\n        />\n      )}\n      <footer className={styles.footer}>\n      </footer>\n    </div>\n  )\n}\n\nexport default BlogIndexPage\n","import React from 'react'\nimport styles from './NotFoundPage.module.css'\n\n// Note that create-react-navi-app will always show an error screen when this\n// is rendered. This is because the underlying react-scripts package shows\n// the error screen when a NotFoundError is thrown, even though it's caught\n// by <NotFoundBoundary>. To see the error rendered by this function,\n// you'll just need to close the error overlay with the \"x\" at the top right.\nfunction NotFoundPage() {\n  return (\n    <div className={styles.NotFound}>\n      <h1>404 - Not Found</h1>\n    </div>\n  )\n}\n\nexport default NotFoundPage","import React from 'react'\nimport styles from './LoadingIndicator.module.css'\n\nfunction LoadingIndicator({ active, className, style }) {\n  return (\n    <div\n      className={`\n        ${styles.LoadingIndicator}\n        ${active ? styles.active : ''}\n        ${className}\n      `}\n      style={style}\n    />\n  )\n}\n\nexport default LoadingIndicator","import React from 'react'\nimport {\n  View,\n  Link,\n  NotFoundBoundary,\n  useLoadingRoute,\n} from 'react-navi'\nimport NotFoundPage from './NotFoundPage'\nimport LoadingIndicator from './LoadingIndicator'\nimport styles from './BlogLayout.module.css'\n\nfunction BlogLayout({ blogRoot, isViewingIndex }) {\n  let loadingRoute = useLoadingRoute()\n\n  return (\n    <div className={styles.container}>\n      <LoadingIndicator active={!!loadingRoute} />\n\n      {// Don't show the header on index pages, as it has a special header.\n      !isViewingIndex && (\n        <header>\n          <Link href={blogRoot} className={styles.nostyle} >← Home</Link>\n        </header>\n      )}\n\n      <main>\n        <NotFoundBoundary render={() => <NotFoundPage />}>\n          <View />\n        </NotFoundBoundary>\n      </main>\n    </div>\n  )\n}\n\nexport default BlogLayout\n","import React from 'react'\nimport { Link, useCurrentRoute, useView } from 'react-navi'\nimport { MDXProvider } from '@mdx-js/react'\nimport ArticleMeta from './ArticleMeta'\nimport Bio from './Bio'\nimport styles from './BlogPostLayout.module.css'\n\nfunction BlogPostLayout({ blogRoot }) {\n  let { title, data, url } = useCurrentRoute()\n  let { connect, content, head } = useView()\n  let { MDXComponent, readingTime } = content\n\n  // The content for posts is an MDX component, so we'll need\n  // to use <MDXProvider> to ensure that links are rendered\n  // with <Link>, and thus use pushState.\n  return connect(\n    <>\n      {head}\n      <article className={styles.container}>\n        <header className={styles.header}>\n          <h2 className={styles.title}>\n            <Link href={url.pathname}>{title}</Link>\n          </h2>\n          <ArticleMeta\n            blogRoot={blogRoot}\n            meta={data}\n            readingTime={readingTime}\n          />\n        </header>\n        <MDXProvider components={{\n          a: Link,\n          wrapper: ({ children }) =>\n            <div className={styles.content}>\n              {children}\n            </div>\n        }}>\n          <MDXComponent />\n        </MDXProvider>\n        <footer className={styles.footer}>\n          <Bio className={styles.bio} blogRoot={blogRoot} />\n          <section className={styles.links}>\n            {\n              data.previousDetails &&\n              <Link className={styles.previous} href={data.previousDetails.href}>\n                ← {data.previousDetails.title}\n              </Link>\n            }\n            {\n              data.nextDetails &&\n              <Link className={styles.next} href={data.nextDetails.href}>\n                {data.nextDetails.title} →\n              </Link>\n            }\n          </section>\n        </footer>\n      </article>\n    </>\n  )\n}\n\nexport default BlogPostLayout\n","export default {\n  // The blog's title as it appears in the layout header, and in the document\n  // <title> tag.\n  title: \"Simon Fan\",\n\n  author: \"Simon Fan\",\n  description: \"My website\",\n\n  // The number of posts to a page on the site index.\n  indexPageSize: 5,\n}\n","import importAll from 'import-all.macro'\nimport * as Navi from 'navi'\nimport { join } from 'path'\nimport { sortBy } from 'lodash'\nimport slugify from 'slugify'\n\n// Get a list of all posts, that will not be loaded until the user\n// requests them.\nconst postModules = importAll.deferred('./**/post.js')\nconst importPost = pathname => postModules[pathname]()\nconst postPathnames = Object.keys(postModules)\nconst datePattern = /^((\\d{1,4})-(\\d{1,4})-(\\d{1,4}))[/-]/\n\nlet postDetails = postPathnames.map(pathname => {\n  let slug = slugify(\n    pathname.replace(/post.jsx?$/, '').replace(/(\\d)\\/(\\d)/, '$1-$2'),\n  )\n    .replace(/^[-.]+|[.-]+$/g, '')\n    .replace(datePattern, '$1/')\n\n  let date\n  let dateMatch = slug.match(datePattern)\n  if (dateMatch) {\n    date = new Date(dateMatch[2], parseInt(dateMatch[3]) - 1, dateMatch[4])\n  }\n\n  return {\n    slug,\n    pathname,\n    date,\n  }\n})\n\n// Sort the pages by slug (which contain the dates)\npostDetails = sortBy(postDetails, ['slug']).reverse()\n\n// Create url-friendly slugs from post pathnames, and a `getPage()` function\n// that can be used to load and return the post's Page object.\nlet posts = postDetails.map(({ slug, pathname, date }, i) => ({\n  getPage: Navi.map(async () => {\n    let { default: post } = await importPost(pathname)\n    let { title, getContent, ...meta } = post\n    let previousSlug, previousPost, nextSlug, nextPost\n\n    if (i !== 0) {\n      let previousPostDetails = postDetails[i - 1]\n      previousPost = (await importPost(previousPostDetails.pathname)).default\n      previousSlug = previousPostDetails.slug\n    }\n\n    if (i + 1 < postDetails.length) {\n      let nextPostDetails = postDetails[i + 1]\n      nextPost = (await importPost(nextPostDetails.pathname)).default\n      nextSlug = nextPostDetails.slug\n    }\n\n    return Navi.route({\n      title,\n      getData: (req, context) => ({\n        date,\n        pathname,\n        slug,\n        previousDetails: previousPost && {\n          title: previousPost.title,\n          href: join(context.blogRoot, 'posts', previousSlug),\n        },\n        nextDetails: nextPost && {\n          title: nextPost.title,\n          href: join(context.blogRoot, 'posts', nextSlug),\n        },\n        ...meta,\n      }),\n      getView: async () => {\n        let { default: MDXComponent, ...other } = await getContent()\n        return { MDXComponent, ...other }\n      },\n    })\n  }),\n  slug,\n}))\n\nexport default posts\n","import {\n  compose,\n  lazy,\n  map,\n  mount,\n  redirect,\n  resolve,\n  route,\n  withContext,\n  withView,\n} from 'navi'\nimport React from 'react'\nimport { join } from 'path'\nimport { chunk, fromPairs } from 'lodash'\nimport BlogIndexPage from '../components/BlogIndexPage'\nimport BlogLayout from '../components/BlogLayout'\nimport BlogPostLayout from '../components/BlogPostLayout'\nimport siteMetadata from '../siteMetadata'\nimport posts from './posts'\n\n// Split the posts into a list of chunks of the given size, and\n// then build index pages for each chunk.\nlet chunks = chunk(posts, siteMetadata.indexPageSize)\nlet chunkPagePairs = chunks.map((chunk, i) => [\n  '/' + (i + 1),\n  map(async (req, context) => {\n    // Don't load anything when just crawling\n    if (req.method === 'HEAD') {\n      return route()\n    }\n\n    // Get metadata for all pages on this page\n    let postRoutes = await Promise.all(\n      chunk.map(async post => {\n        let href = join(context.blogRoot, 'posts', post.slug)\n        return await resolve({\n          // If you want to show the page content on the index page, set\n          // this to 'GET' to be able to access it.\n          method: 'HEAD',\n          routes,\n          url: href,\n        })\n      }),\n    )\n\n    // Only add a page number to the page title after the first index page.\n    let pageTitle = siteMetadata.title\n    if (i > 0) {\n      pageTitle += ` – page ${i + 1}`\n    }\n\n    return route({\n      title: pageTitle,\n      view: (\n        <BlogIndexPage\n          blogRoot={context.blogRoot}\n          pageNumber={i + 1}\n          pageCount={chunks.length}\n          postRoutes={postRoutes}\n        />\n      ),\n    })\n  }),\n])\n\nconst routes = compose(\n  withContext((req, context) => ({\n    ...context,\n    blogRoot: req.mountpath || '/',\n  })),\n  withView((req, context) => {\n    // Check if the current page is an index page by comparing the remaining\n    // portion of the URL's pathname with the index page paths.\n    let isViewingIndex = req.path === '/' || /^\\/page\\/\\d+$/.test(req.path)\n\n    // Render the application-wide layout\n    return (\n      <BlogLayout blogRoot={context.blogRoot} isViewingIndex={isViewingIndex} />\n    )\n  }),\n  mount({\n    // The blog's index pages go here. The first index page is mapped to the\n    // root URL, with a redirect from \"/page/1\". Subsequent index pages are\n    // mapped to \"/page/n\".\n    '/': chunkPagePairs.shift()[1],\n    '/page': mount({\n      '/1': redirect((req, context) => context.blogRoot),\n      ...fromPairs(chunkPagePairs),\n    }),\n\n    // Put posts under \"/posts\", so that they can be wrapped with a\n    // \"<BlogPostLayout />\" that configures MDX and adds a post-specific layout.\n    '/posts': compose(\n      withView((req, context) => (\n        <BlogPostLayout blogRoot={context.blogRoot} />\n      )),\n      mount(fromPairs(posts.map(post => ['/' + post.slug, post.getPage]))),\n    ),\n\n    // Miscellaneous pages can be added directly to the root switch.\n    '/tags': lazy(() => import('./tags')),\n    '/about': lazy(() => import('./about')),\n  }),\n)\n\nexport default routes\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bio\":\"Bio_Bio__1ks_2\",\"nostyle\":\"Bio_nostyle__3fK8-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogIndexPage_title__341hM\",\"articlesList\":\"BlogIndexPage_articlesList__1V39R\",\"footer\":\"BlogIndexPage_footer__1vkZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingIndicator\":\"LoadingIndicator_LoadingIndicator__3KSl0\",\"active\":\"LoadingIndicator_active__3EncM\",\"LoadingIndicator-animation\":\"LoadingIndicator_LoadingIndicator-animation__2icwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BlogLayout_container__1fiRb\",\"nostyle\":\"BlogLayout_nostyle__1hpOV\",\"ArticleSummary\":\"BlogLayout_ArticleSummary__2ZFHg\"};","import React from 'react'\nimport { Link } from 'react-navi'\nimport ArticleMeta from './ArticleMeta'\nimport styles from './ArticleSummary.module.css'\n\nfunction ArticleSummary({ blogRoot, route }) {\n  return (\n    <article className={styles.ArticleSummary}>\n      <h2><Link href={route.url.href}>{route.title}</Link></h2>\n      <ArticleMeta blogRoot={blogRoot} meta={route.data} />\n      <p>{route.data.spoiler}</p>\n    </article>\n  )\n}\n\nexport default ArticleSummary","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ArticleSummary\":\"ArticleSummary_ArticleSummary__3I5Qk\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import register from \"navi-scripts/register\";\nimport { createBrowserNavigation } from \"navi\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-navi\";\nimport HelmetProvider from \"react-navi-helmet-async\";\nimport \"./index.module.css\";\nimport routes from \"./routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// `register()` is responsible for exporting your app's pages and App\n// component to the static renderer, and for starting the app with the\n// `main()` function when running within a browser.\nregister({\n  // Specify the pages that navi-app should statically build, by passing in a\n  // Switch object.\n  routes,\n\n  // This will only be called when loading your app in the browser. It won't\n  // be called when performing static generation.\n  async main() {\n    let navigation = createBrowserNavigation({ routes });\n\n    // Wait until the navigation has loaded the page's content, or failed to do\n    // so. If you want to load other data in parallel while the initial page is\n    // loading, make sure to start loading before this line.\n    await navigation.getRoute();\n\n    // React requires that you call `ReactDOM.hydrate` if there is statically\n    // rendered content in the root element, but prefers us to call\n    // `ReactDOM.render` when it is empty.\n    let hasStaticContent = process.env.NODE_ENV === \"production\";\n    let renderer = hasStaticContent ? ReactDOM.hydrate : ReactDOM.render;\n\n    // Start react, passing in the current navigation state and\n    // rendering the top-level view.\n    renderer(\n      <HelmetProvider>\n        <Router navigation={navigation} />\n      </HelmetProvider>,\n      document.getElementById(\"root\")\n    )\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n  }\n});\n"],"sourceRoot":""}